const {sign, verify, pack, unpack, signAndPack, unpackAndVerify, makeCWT, parseCWT, debug} = require('../lib/index');const expect = require('chai').expect; 

describe('SE', async () => {
  it('should verify SE_2DCode_raw_1', async () => {
    const
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
    expect(await parseCWT(cwtPayload.contents)).to.eql({'ver': '1.0.0', 'nam': {'fn': 'Lövström', 'fnt': 'LOEVSTROEM', 'gn': 'Oscar', 'gnt': 'OSCAR'}, 'dob': '1958-11-11', 'v': [{'tg': '840539006', 'vp': 'J07BX03', 'mp': 'EU/1/21/1529', 'ma': 'ORG-100030215', 'dn': 2, 'sd': 2, 'dt': '2021-03-18', 'co': 'SE', 'is': 'Swedish eHealth Agency', 'ci': 'URN:UVCI:01:SE:EHM/V100000024GI5HM'}]});
  });

  it('should verify SE_2DCode_raw_2', async () => {
    const
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
    expect(await parseCWT(cwtPayload.contents)).to.eql({'ver': '1.0.0', 'nam': {'fn': 'Lövström', 'fnt': 'LOEVSTROEM', 'gn': 'Oscar', 'gnt': 'OSCAR'}, 'dob': '1958-11-11', 't': [{'tg': '840539006', 'tt': 'LP6464-4', 'nm': 'Roche LightCycler qPCR', 'sc': new Date('2021-06-02T06:02:13.262564Z'), 'tr': '260415000', 'tc': 'Arlanda Airport Covid Center 1', 'co': 'SE', 'is': 'Swedish eHealth Agency', 'ci': 'URN:UVCI:01:SE:EHM/TARN89875439877'}]});
  });

  it('should verify SE_2DCode_raw_3', async () => {
    const
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
    expect(await parseCWT(cwtPayload.contents)).to.eql({'ver': '1.0.0', 'nam': {'fn': 'Lövström', 'fnt': 'LOEVSTROEM', 'gn': 'Oscar', 'gnt': 'OSCAR'}, 'dob': '1958-11-11', 't': [{'tg': '840539006', 'tt': 'LP6464-4', 'nm': 'Roche LightCycler qPCR', 'sc': '2021-06-02T06:02:13.262564Z', 'tr': '260415000', 'tc': 'Arlanda Airport Covid Center 1', 'co': 'SE', 'is': 'Swedish eHealth Agency', 'ci': 'URN:UVCI:01:SE:EHM/TARN89875439877'}]});
  });

  it('should verify SE_2DCode_raw_4', async () => {
    const
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
    expect(await parseCWT(cwtPayload.contents)).to.eql({'ver': '1.0.0', 'nam': {'fn': 'Lövström', 'fnt': 'LOEVSTROEM', 'gn': 'Oscar', 'gnt': 'OSCAR'}, 'dob': '1958-11-11', 't': [{'tg': '840539006', 'tt': 'LP217198-3', 'ma': '1232', 'sc': new Date('2021-06-02T04:31:14.168957Z'), 'tr': '260415000', 'tc': 'Axelsbergs vårdcentral', 'co': 'SE', 'is': 'Swedish eHealth Agency', 'ci': 'URN:UVCI:01:SE:EHM/TSTAX67554312'}]});
  });

  it('should verify SE_2DCode_raw_5', async () => {
    const HC1 = 'HC1:NCFOXN%TSMAHN-HFN4TTC4 SJWKZ*9GBH. MU965HRLX8DGAM*U/+69 GRJ5*P5-FJLF6CB93KD62KKYJF84:H3J1D1I3-*TW C57D.*T/2T NSQ/3MEDA/DS.CSVD0DJ WJO*Q9ZIQ0J1VCSWC%PDX1LJ9CZXI:G1LGBND3%*4-U22HFVON%*8ZJJ*%CN1TTB5C-OTF1J*3TFH2V42F1COT$HFC*IUZ4+FJE 4Y3LL/II 0HJP7NVDEB12JD*2D0HH78$ZJ*DJWP42W5:YPHJUTRM8OI9YO LE3UQ5MA1TH8L2CPIGSUHPMU+VAWO2O8U+VH*FYZQ H992W %JMSGUVPQRHIY1VS11O1VQ3CVD**G/GBPG510U00NJQ15NSQO1YWQJ25P+BM-RCNR09AGWUI.TW$2H.J83U8FV8J044UD A..7/:U0-G-VNG2UK06O-FQ2C0FIT20SAGU1';
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
    expect(await parseCWT(cwtPayload.contents)).to.eql({'ver': '1.0.0', 'nam': {'fn': 'Lövström', 'fnt': 'LOEVSTROEM', 'gn': 'Oscar', 'gnt': 'OSCAR'}, 'dob': '1958-11-11', 'r': [{'tg': '840539006', 'fr': '2021-05-22', 'co': 'SE', 'is': 'Swedish eHealth Agency', 'df': '2021-06-02', 'du': '2021-08-31', 'ci': 'URN:UVCI:01:SE:EHM/R987765321'}]});
  });

});


const {sign, verify, pack, unpack, signAndPack, unpackAndVerify, makeCWT, parseCWT, debug} = require('../lib/index');const expect = require('chai').expect; 

describe('DK', async () => {
  it('should verify DK_2DCode_raw_7', async () => {
    const HC1 = 'HC1:NCFOXN%TSMAHN-H9QCGDSB5QPN9OO3TH4O:5+T9DNUOGI8JR+4UTSJLPO9JJK1JZZPQA3DP4OW631AX5QF36FY1OSMNV1L8VNF6O M3PU5LE+XEU9E8-67BE1VEEL6VW65PMVJEY+MOWEES6$96/966Y6FPA0T932QLOJ9ZIQ0J1VCSWC%PD:NK8WCZXI+G1 734LTJ6B6*K2NOGCGP+PKC1H8J2*N/PSSV0I+QWZJHN1H8J4MI*W0-RQ2$H6QK3PIA KZ*U0I1-I0*OC6H0HXMP$I/XK$M8LOEPZB6J0SN4B-S-*O5W41FD3DD.Z88IF2IL9NTWDD-FHL:O$HF1FD$W4894T1K 6STNPZ78W5I19A-TLNKE$JDVPLW1KD0K%XGTS6$P82SOM5P+P1Y*MC*7-4IIWMK-54VCN*P6C6:AMBENX0ABAP+T5K GJRPT82:J8JP2*J1ENN-HMJQADMKRNM65IB 5T:P*8OZ90O7L05';
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
    expect(await parseCWT(cwtPayload.contents)).to.eql({'ver': '1.0.0', 'nam': {'fn': 'Trinke', 'fnt': 'TRINKE', 'gn': 'Larsen', 'gnt': 'LARSEN'}, 'dob': '1978-10-29', 'r': [{'tg': '840539006', 'fr': '2021-04-08', 'co': 'DK', 'is': 'Danish Health Data Authority', 'df': '2021-04-22', 'du': '2021-12-08', 'ci': 'URN:UVCI:01:DK:AAF8DC68A9B655528BA581CA0D04353F#Y'}]});
  });

  it('should verify DK_2DCode_raw_10', async () => {
    const
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
    expect(await parseCWT(cwtPayload.contents)).to.eql({'ver': '1.0.0', 'nam': {'fn': 'Jørgensen', 'fnt': 'JOERGENSEN', 'gn': 'Klaus', 'gnt': 'KLAUS'}, 'dob': '1983-01-06', 'v': [{'tg': '840539006', 'vp': '1119349007', 'mp': 'EU/1/20/1528', 'ma': 'ORG-100030215', 'dn': 2, 'sd': 2, 'dt': '2021-05-20', 'co': 'DK', 'is': 'Danish Health Data Authority', 'ci': 'URN:UVCI:01:DK:F573106A0A315AB8A7F7016329C30550#2'}]});
  });

  it('should verify DK_2DCode_raw_1', async () => {
    const
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
    expect(await parseCWT(cwtPayload.contents)).to.eql({'ver': '1.0.0', 'nam': {'fn': 'Klaus', 'fnt': 'KLAUS', 'gn': 'Jørgensen', 'gnt': 'JOERGENSEN'}, 'dob': '1983-01-06', 'v': [{'tg': '840539006', 'vp': '1119349007', 'mp': 'EU/1/20/1528', 'ma': 'ORG-100030215', 'dn': 2, 'sd': 2, 'dt': '2021-05-03', 'co': 'DK', 'is': 'Danish Health Data Authority', 'ci': 'URN:UVCI:01:DK:B986830007345F99AE898FB82C6C61F2#A'}]});
  });

  it('should verify DK_2DCode_raw_11', async () => {
    const
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
    expect(await parseCWT(cwtPayload.contents)).to.eql({'ver': '1.0.0', 'nam': {'fn': 'Ågesen', 'fnt': 'AAGESEN', 'gn': 'Åge', 'gnt': 'AAGE'}, 'dob': '1945-11-20', 't': [{'tg': '840539006', 'tt': 'LP6464-4', 'sc': '2021-05-30T13:48:20Z', 'dr': '2021-05-31T12:48:20Z', 'tr': '260415000', 'tc': 'Test Center DK', 'co': 'DK', 'is': 'Danish Health Data Authority', 'ci': 'URN:UVCI:01:DK:B19D10B4E18551559EBDEE46248DA883#S'}]});
  });

  it('should verify DK_2DCode_raw_2', async () => {
    const
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
    expect(await parseCWT(cwtPayload.contents)).to.eql({'ver': '1.0.0', 'nam': {'fn': 'Åge', 'fnt': 'AAGE', 'gn': 'Ågesen', 'gnt': 'AAGESEN'}, 'dob': '1945-11-20', 't': [{'tg': '840539006', 'tt': 'LP6464-4', 'sc': '2021-05-16T22:14:51Z', 'dr': '2021-05-17T21:14:51Z', 'tr': '260415000', 'tc': 'Test Center DK', 'co': 'DK', 'is': 'Danish Health Data Authority', 'ci': 'URN:UVCI:01:DK:B19D10B4E18551559EBDEE46248DA883#S'}]});
  });

  it('should verify DK_2DCode_raw_12', async () => {
    const
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
    expect(await parseCWT(cwtPayload.contents)).to.eql({'ver': '1.0.0', 'nam': {'fn': 'Larsen', 'fnt': 'LARSEN', 'gn': 'Trinke', 'gnt': 'TRINKE'}, 'dob': '1978-10-29', 'r': [{'tg': '840539006', 'fr': '2021-04-01', 'co': 'DK', 'is': 'Danish Health Data Authority', 'df': '2021-04-15', 'du': '2021-12-01', 'ci': 'URN:UVCI:01:DK:1B9B48CA1F4351F4A4C023D3815A74A9#I'}]});
  });

  it('should verify DK_2DCode_raw_3', async () => {
    const
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
    expect(await parseCWT(cwtPayload.contents)).to.eql({'ver': '1.0.0', 'nam': {'fn': 'Trinke', 'fnt': 'TRINKE', 'gn': 'Larsen', 'gnt': 'LARSEN'}, 'dob': '1978-10-29', 'r': [{'tg': '840539006', 'fr': '2021-04-06', 'co': 'DK', 'is': 'Danish Health Data Authority', 'df': '2021-04-20', 'du': '2021-10-03', 'ci': 'URN:UVCI:01:DK:1D6DAB71F99A5C87A657D6D904558001#R'}]});
  });

  it('should verify DK_2DCode_raw_8', async () => {
    const
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
    expect(await parseCWT(cwtPayload.contents)).to.eql({'ver': '1.0.0', 'nam': {'fn': 'Toraf', 'fnt': 'TORAF', 'gn': 'Olesen', 'gnt': 'OLESEN'}, 'dob': '1939-01-06', 't': [{'tg': '840539006', 'tt': 'LP217198-3', 'sc': '2021-05-18T16:09:50Z', 'dr': '2021-05-19T15:09:50Z', 'tr': '260415000', 'tc': 'Test Center DK', 'co': 'DK', 'is': 'Danish Health Data Authority', 'ci': 'URN:UVCI:01:DK:B19D10B4E18551559EBDEE46248DA883#S'}]});
  });

  it('should verify DK_2DCode_raw_4', async () => {
    const HC1 = 'HC1:NCFOXN%TSMAHN-H9QCGDSB5QPN9OO3:D4%Y6-365KN-TMLV4O 53.PP-IMJTH82F/8X*G3M9BM9Z0BZW4Z*AK.GNNVR*G0C7PHBO335KN/NBA93UNN7E3MJJ-E36DJFG34NJJONOLNPQNCAJGHJ0DN/IBM23V+0SZ4ZI00T9895*96846A$Q 76UW6J-1KI6II6GCM-B6LK98T5WBI$E9$UPV3Q.GUQ$9WC5R7ACB97C968ELZ5$DP6PP5ILUF5O+83Q6*96+LG.Q572QDB9M%5+8E8.PDB9MGA IB4OIMEDTJCJKDLEDL9CVTADYI7VCE8C09DC8C3BIXJA8/SG8C49D:8DDIK.ZJ5OI9YI:8D7XDWNDPU6QQ5L/5R3FMIA5.BI79:CA$IB6LF-NJ4-99FED.BOH3- RHBW:29M.SY$NTS661438CTBOFRMLNKNM8JI0JPGP5HP05$ZE86S7813SIXCW.QV8+1O37BHFJT3A7D7D5LN5$-BFMTLWBICUC G-9T.BC1%VS$P+OKNBQNFWD%OF 8T2O$X777T50LNEQLT2II30$G';
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
    expect(await parseCWT(cwtPayload.contents)).to.eql({'ver': '1.0.0', 'nam': {'fn': 'Toraf', 'fnt': 'TORAF', 'gn': 'Olesen', 'gnt': 'OLESEN'}, 'dob': '1939-01-06', 't': [{'tg': '840539006', 'tt': 'LP217198-3', 'sc': '2021-05-16T22:28:43Z', 'dr': '2021-05-17T21:28:43Z', 'tr': '260415000', 'tc': 'Test Center DK', 'co': 'DK', 'is': 'Danish Health Data Authority', 'ci': 'URN:UVCI:01:DK:B19D10B4E18551559EBDEE46248DA883#S'}]});
  });

  it('should verify DK_2DCode_raw_5', async () => {
    const
    const cwtPayload = await unpackAndVerify(HC1);
    expect(cwtPayload).not.to.be.null;
    expect(cwtPayload).not.to.be.undefined;
    expect(await parseCWT(cwtPayload.contents)).to.eql({'ver': '1.0.0', 'nam': {'fn': 'Klaus', 'fnt': 'KLAUS', 'gn': 'Jørgensen', 'gnt': 'JOERGENSEN'}, 'dob': '1983-01-06', 'v': [{'tg': '840539006', 'vp': '1119349007', 'mp': 'EU/1/20/1528', 'ma': 'ORG-100030215', 'dn': 2, 'sd': 2, 'dt': '2021-05-04', 'co': 'DK', 'is': 'Danish Health Data Authority', 'ci': 'URN:UVCI:01:DK:0EF88044F7935DF2B4A938A38C14C97C#C'}]});
  });

});

